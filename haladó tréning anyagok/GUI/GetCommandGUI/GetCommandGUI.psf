<File version="2">
  <FileID>21f32975-faf8-48d0-a556-860411f9b018</FileID>
  <Preview>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</Preview>
  <Object type="System.Windows.Forms.Form, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="formAblak" children="Controls">
    <Property name="AcceptButton">
      <Reference name="buttonOK" />
    </Property>
    <Property name="ClientSize">479, 502</Property>
    <Property name="FormBorderStyle">FixedDialog</Property>
    <Property name="MaximizeBox">False</Property>
    <Property name="MinimizeBox">False</Property>
    <Property name="Name">formAblak</Property>
    <Property name="StartPosition">CenterScreen</Property>
    <Property name="Text">Ablak</Property>
    <Object type="System.Windows.Forms.ListView, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="resultlist" children="Controls">
      <Property name="CheckBoxes">True</Property>
      <Property name="Columns">
        <Item type="System.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <Reference name="CommandType" />
        </Item>
        <Item type="System.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <Reference name="Name" />
        </Item>
        <Item type="System.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <Reference name="Version" />
        </Item>
        <Item type="System.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <Reference name="Source" />
        </Item>
      </Property>
      <Property name="Location">4, 335</Property>
      <Property name="MultiSelect">False</Property>
      <Property name="Name">resultlist</Property>
      <Property name="Size">463, 126</Property>
      <Property name="TabIndex">7</Property>
      <Property name="UseCompatibleStateImageBehavior">False</Property>
      <Property name="View">Details</Property>
      <Event name="ItemChecked">resultlist_ItemChecked</Event>
    </Object>
    <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="resultbox" children="Controls">
      <Property name="Location">141, 175</Property>
      <Property name="Multiline">True</Property>
      <Property name="Name">resultbox</Property>
      <Property name="Size">181, 113</Property>
      <Property name="TabIndex">6</Property>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonGetCommand" children="Controls">
      <Property name="AutoSize">True</Property>
      <Property name="Location">141, 105</Property>
      <Property name="Name">buttonGetCommand</Property>
      <Property name="Size">181, 23</Property>
      <Property name="TabIndex">5</Property>
      <Property name="Text">Get-Command</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonGetCommand_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelVerb" children="Controls">
      <Property name="Location">141, 58</Property>
      <Property name="Name">labelVerb</Property>
      <Property name="Size">29, 20</Property>
      <Property name="TabIndex">4</Property>
      <Property name="Text">Verb</Property>
    </Object>
    <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="verbbox" children="Controls">
      <Property name="Location">222, 58</Property>
      <Property name="Name">verbbox</Property>
      <Property name="Size">100, 20</Property>
      <Property name="TabIndex">3</Property>
    </Object>
    <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelNoun" children="Controls">
      <Property name="Location">141, 22</Property>
      <Property name="Name">labelNoun</Property>
      <Property name="Size">41, 20</Property>
      <Property name="TabIndex">2</Property>
      <Property name="Text">Noun</Property>
    </Object>
    <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="nounbox" children="Controls">
      <Property name="Location">222, 22</Property>
      <Property name="Name">nounbox</Property>
      <Property name="Size">100, 20</Property>
      <Property name="TabIndex">1</Property>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonOK" children="Controls">
      <Property name="Anchor">Bottom, Right</Property>
      <Property name="DialogResult">OK</Property>
      <Property name="Location">392, 467</Property>
      <Property name="Name">buttonOK</Property>
      <Property name="Size">75, 23</Property>
      <Property name="TabIndex">0</Property>
      <Property name="Text">&amp;OK</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonOK_Click</Event>
    </Object>
  </Object>
  <Object type="System.Windows.Forms.ImageList, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="imagelist1">
    <Property name="ColorDepth">Depth8Bit</Property>
    <Property name="ImageSize">16, 16</Property>
    <Property name="TransparentColor">Transparent</Property>
  </Object>
  <Object type="System.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="CommandType">
    <Property name="Text">CommandType</Property>
    <Property name="Width">81</Property>
  </Object>
  <Object type="System.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="Name">
    <Property name="Text">Name</Property>
    <Property name="Width">109</Property>
  </Object>
  <Object type="System.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="Version">
    <Property name="Text">Version</Property>
    <Property name="Width">84</Property>
  </Object>
  <Object type="System.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="Source">
    <Property name="Text">Source</Property>
    <Property name="Width">178</Property>
  </Object>
  <Object type="System.Windows.Forms.SaveFileDialog, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="savefiledialog" />
  <Code><![CDATA[

$buttonOK_Click={$formAblak.Close()}

$buttonGetCommand_Click = {
	if ($nounbox.Text -eq '')
		{ $nounbox.Text = '*'}
	
	if ($verbbox.Text -eq '')
	{ $verbbox.Text = '*' }
	
	$result = Get-Command -Noun $nounbox.Text -Verb $verbbox.Text
	foreach ($resultitem in $result)
	{
		$resultbox.AppendText($resultitem)
		$resultbox.AppendText("`n")
		
		$item = $resultlist.Items.Add($resultitem.CommandType.ToString())
		$item.SubItems.Add($resultitem.Name.ToString())
		$item.SubItems.Add($resultitem.Version.ToString())
		$item.SubItems.Add($resultitem.Source.ToString())
	}

}

#region Control Helper Functions
function Sort-ListViewColumn 
{
	<#
	.SYNOPSIS
		Sort the ListView's item using the specified column.

	.DESCRIPTION
		Sort the ListView's item using the specified column.
		This function uses Add-Type to define a class that sort the items.
		The ListView's Tag property is used to keep track of the sorting.

	.PARAMETER ListView
		The ListView control to sort.

	.PARAMETER ColumnIndex
		The index of the column to use for sorting.
		
	.PARAMETER  SortOrder
		The direction to sort the items. If not specified or set to None, it will toggle.
	
	.EXAMPLE
		Sort-ListViewColumn -ListView $listview1 -ColumnIndex 0
#>
	param(	
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			[System.Windows.Forms.ListView]$ListView,
			[Parameter(Mandatory=$true)]
			[int]$ColumnIndex,
			[System.Windows.Forms.SortOrder]$SortOrder = 'None')
	
	if(($ListView.Items.Count -eq 0) -or ($ColumnIndex -lt 0) -or ($ColumnIndex -ge $ListView.Columns.Count))
	{
		return;
	}
	
	#region Define ListViewItemComparer
		try{
		$local:type = [ListViewItemComparer]
	}
	catch{
	Add-Type -ReferencedAssemblies ('System.Windows.Forms') -TypeDefinition  @" 
	using System;
	using System.Windows.Forms;
	using System.Collections;
	public class ListViewItemComparer : IComparer
	{
	    public int column;
	    public SortOrder sortOrder;
	    public ListViewItemComparer()
	    {
	        column = 0;
			sortOrder = SortOrder.Ascending;
	    }
	    public ListViewItemComparer(int column, SortOrder sort)
	    {
	        this.column = column;
			sortOrder = sort;
	    }
	    public int Compare(object x, object y)
	    {
			if(column >= ((ListViewItem)x).SubItems.Count)
				return  sortOrder == SortOrder.Ascending ? -1 : 1;
		
			if(column >= ((ListViewItem)y).SubItems.Count)
				return sortOrder == SortOrder.Ascending ? 1 : -1;
		
			if(sortOrder == SortOrder.Ascending)
	        	return String.Compare(((ListViewItem)x).SubItems[column].Text, ((ListViewItem)y).SubItems[column].Text);
			else
				return String.Compare(((ListViewItem)y).SubItems[column].Text, ((ListViewItem)x).SubItems[column].Text);
	    }
	}
"@  | Out-Null
	}
	#endregion
	
	if($ListView.Tag -is [ListViewItemComparer])
	{
		#Toggle the Sort Order
		if($SortOrder -eq [System.Windows.Forms.SortOrder]::None)
		{
			if($ListView.Tag.column -eq $ColumnIndex -and $ListView.Tag.sortOrder -eq 'Ascending')
			{
				$ListView.Tag.sortOrder = 'Descending'
			}
			else
			{
				$ListView.Tag.sortOrder = 'Ascending'
			}
		}
		else
		{
			$ListView.Tag.sortOrder = $SortOrder
		}
		
		$ListView.Tag.column = $ColumnIndex
		$ListView.Sort()#Sort the items
	}
	else
	{
		if($SortOrder -eq [System.Windows.Forms.SortOrder]::None)
		{
			$SortOrder = [System.Windows.Forms.SortOrder]::Ascending	
		}
		
		#Set to Tag because for some reason in PowerShell ListViewItemSorter prop returns null
		$ListView.Tag = New-Object ListViewItemComparer ($ColumnIndex, $SortOrder) 
		$ListView.ListViewItemSorter = $ListView.Tag #Automatically sorts
	}
}


function Add-ListViewItem
{
<#
	.SYNOPSIS
		Adds the item(s) to the ListView and stores the object in the ListViewItem's Tag property.

	.DESCRIPTION
		Adds the item(s) to the ListView and stores the object in the ListViewItem's Tag property.

	.PARAMETER ListView
		The ListView control to add the items to.

	.PARAMETER Items
		The object or objects you wish to load into the ListView's Items collection.
		
	.PARAMETER  ImageIndex
		The index of a predefined image in the ListView's ImageList.
	
	.PARAMETER  SubItems
		List of strings to add as Subitems.
	
	.PARAMETER Group
		The group to place the item(s) in.
	
	.PARAMETER Clear
		This switch clears the ListView's Items before adding the new item(s).
	
	.EXAMPLE
		Add-ListViewItem -ListView $listview1 -Items "Test" -Group $listview1.Groups[0] -ImageIndex 0 -SubItems "Installed"
#>
	
	Param( 
	[ValidateNotNull()]
	[Parameter(Mandatory=$true)]
	[System.Windows.Forms.ListView]$ListView,
	[ValidateNotNull()]
	[Parameter(Mandatory=$true)]
	$Items,
	[int]$ImageIndex = -1,
	[string[]]$SubItems,
	$Group,
	[switch]$Clear)
	
	if($Clear)
	{
		$ListView.Items.Clear();
    }
    
    $lvGroup = $null
    if ($Group -is [System.Windows.Forms.ListViewGroup])
    {
        $lvGroup = $Group
    }
    elseif ($Group -is [string])
    {
        #$lvGroup = $ListView.Group[$Group] # Case sensitive
        foreach ($groupItem in $ListView.Groups)
        {
            if ($groupItem.Name -eq $Group)
            {
                $lvGroup = $groupItem
                break
            }
        }
        
        if ($lvGroup -eq $null)
        {
            $lvGroup = $ListView.Groups.Add($Group, $Group)
        }
    }
    
	if($Items -is [Array])
	{
		$ListView.BeginUpdate()
		foreach ($item in $Items)
		{		
			$listitem  = $ListView.Items.Add($item.ToString(), $ImageIndex)
			#Store the object in the Tag
			$listitem.Tag = $item
			
			if($SubItems -ne $null)
			{
				$listitem.SubItems.AddRange($SubItems)
			}
			
			if($lvGroup -ne $null)
			{
				$listitem.Group = $lvGroup
			}
		}
		$ListView.EndUpdate()
	}
	else
	{
		#Add a new item to the ListView
		$listitem  = $ListView.Items.Add($Items.ToString(), $ImageIndex)
		#Store the object in the Tag
		$listitem.Tag = $Items
		
		if($SubItems -ne $null)
		{
			$listitem.SubItems.AddRange($SubItems)
		}
		
		if($lvGroup -ne $null)
		{
			$listitem.Group = $lvGroup
		}
	}
}

#endregion


$resultlist_ItemChecked=[System.Windows.Forms.ItemCheckedEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.ItemCheckedEventArgs]
	if ($_.Item.Checked)
	{
		$savefiledialog.Filter = "txt files (*.txt)|*.txt|All files (*.*)|*.*"
		$file= $($_.Item.SubItems[1].Text) + "_help.txt"
		$savefiledialog.FileName = $file
		$savefiledialog.ShowDialog()
		$file = $savefiledialog.FileName
		
		Get-Help $($_.Item.SubItems[1].Text) | Out-File $file
	}

	
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies>
    <Assembly>mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.DirectoryServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.ServiceProcess, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
  </Assemblies>
</File>